---
layout: base
ogImage: /covid/og_image.png
seo:
  title: Check your nearest Vaccination Center and  Slots Availability
description: Search for Vaccination center and Slots Availability. Get Vaccinated and Help India in making Covid Free. Stay Safe. Stay Healthy.
sitemap:
  changefreq: weekly
  priority: 0.8
---

<div>
  <div
    class="container mx-auto py-8"
    x-data="searchFormController()"
    x-init="handleInit()"
  >
    <div class="px-6">
      <h1 class="text-lg font-medium">
        <a
          href="{{
            meta.publicUrl
          }}/?utm_source=direct&utm_medium=site&utm_campaign=covid-vaccination"
          class="inline-flex items-center space-x-3 text-lg"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            class="w-10 h-10"
            fill="currentColor"
          >
            <path
              d="M8 16a8 8 0 10-4.465-1.361c.41.276 0-.846.715-2.639.534-1.34 1.81-4.466 1.825-5.205.01-.534-.193-.994-.4-1.466-.046-.101-.09-.204-.134-.307-.391.768-1.764 1.929-2.69 1.743-1.285-.256-.419-1.777.116-2.359l.18-.201c.498-.563 1.191-1.347 1.836-1.076.312.13 1.09.701 1.707 1.19 0 0-.018-.047-.028-.079-.282-.87-.67-1.896 1.14-2.047.46-.04 2.776-.023 2.275.854-.202.352-1.139.45-1.863.526-.305.032-.573.06-.732.101.076.42.121.93.128 1.396 1.074.123 1.755.032 2.557-.075.399-.053.827-.11 1.348-.147C12.035 4.81 12.75 4.75 13 5c.165.165.204.575.145.934-.247 1.491-1.68 2.794-2.812 3.823-.191.174-.374.34-.54.498-1.642 1.55-2.523 3.144-2.434 5.127.01.189-.011.607.225.607.138.007.276.011.416.011z"
            />
          </svg>
          <span>
            <span class="tracking-widest font-medium inline-block mr-2"
              >Sembark</span
            >
            <span class="text-sm inline-block">Travel Management Software</span>
          </span>
        </a>
      </h1>
      <div class="sm:flex justify-between mb-4 mt-4 items-center">
        <div class="mb-2 md:mb-0">
          <h2 class="text-2xl font-medium">Search for Vaccination Slots</h2>
        </div>
        <div
          class="flex space-x-4 items-center text-sm text-indigo-100 font-medium"
        >
          <a href="#faq" class="underline">FAQs</a>
          <template
            x-if="notificationsSupportedByBrowser && totalSubscriptionCount > 0"
          >
            <button
              @click="handleUnsubscribeFromAll"
              type="button"
              class="inline-block underline"
            >
              Stop All Notifications
            </button>
          </template>
        </div>
      </div>
    </div>
    <div class="text-black bg-white p-6 rounded-lg">
      <div class="md:flex">
        <div class="md:w-64 mb-8">
          <form action="#" method="post" @submit.prevent="handleSubmit">
            <div
              class="flex flex-wrap space-x-2 md:block md:space-x-0 justify-between"
            >
              <section class="mb-4">
                <div class="text-gray-600 text-sm">Search by</div>
                <section class="inline-flex border-2 rounded divide-x-2">
                  <label class="block px-2 py-2 cursor-pointer">
                    <input type="radio" value="pincode" x-model="searchUsing" />
                    Pincode
                  </label>
                  <label class="block px-2 py-2 cursor-pointer">
                    <input
                      type="radio"
                      value="district"
                      x-model="searchUsing"
                    />
                    District
                  </label>
                </section>
              </section>
              <section class="mb-4">
                <div class="text-gray-600 text-sm">Age</div>
                <section class="inline-flex border-2 rounded divide-x-2">
                  <label class="block px-2 py-2 cursor-pointer">
                    <input type="radio" value="18" x-model="minAgeLimit" />
                    18-45
                  </label>
                  <label class="block px-2 py-2 cursor-pointer">
                    <input type="radio" value="45" x-model="minAgeLimit" />
                    45+
                  </label>
                </section>
              </section>
            </div>
            <div class="flex items-end md:block space-x-4 md:space-x-0">
              <div class="flex-1">
                <template x-if="searchUsing == 'district'">
                  <div>
                    <label for="district_id">Select District</label>
                    <select
                      x-model="query.district_id"
                      id="district_id"
                      name="district_id"
                      class="border-2 rounded w-full p-3"
                      required
                      placeholder="Jaipur"
                    >
                      <option value="">Select...</option>
                      {% for district in covid.districts %}
                      <option value="{{ district.district_id }}">
                        {{ district.district_name }}
                      </option>
                      {% endfor %}
                    </select>
                  </div>
                </template>
                <template x-if="searchUsing == 'pincode'">
                  <div>
                    <label for="pincode">Enter Pincode</label>
                    <input
                      id="pincode"
                      type="number"
                      name="pincode"
                      class="border-2 rounded w-full p-3"
                      x-model="query.pincode"
                      required
                      placeholder="302020"
                      min="100000"
                      max="999999"
                    />
                  </div>
                </template>
              </div>
              <div>
                <button
                  :disabled="isSubmitting"
                  type="submit"
                  class="hidden md:inline-block px-4 py-3 bg-indigo-700 text-white rounded mt-8"
                >
                  <template x-if="isSubmitting">
                    <span>Searching...</span>
                  </template>
                  <template x-if="!isSubmitting">
                    <span>Search Available Slots</span>
                  </template>
                </button>
                <button
                  :disabled="isSubmitting"
                  type="submit"
                  class="inline-block md:hidden p-3 bg-indigo-700 border-2 border-indigo-700 text-white rounded"
                >
                  <template x-if="isSubmitting">
                    <span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-6 w-6 animate-spin"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                        />
                      </svg>
                    </span>
                  </template>
                  <template x-if="!isSubmitting">
                    <span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-6 w-6"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                        />
                      </svg>
                    </span>
                  </template>
                </button>
              </div>
            </div>
          </form>
          <template x-if="availabilityStats.length > 0">
            <div class="mt-8">
              <h2 class="text-lg font-medium mb-2" id="how_to_book">
                General Availability
              </h2>
              <div class="w-full max-w-full overflow-x-auto">
                <table>
                  <tbody>
                    <tr class="relative">
                      <th
                        class="sticky top-0 left-0 bg-white z-1 p-0 vertical-middle border-b"
                      >
                        <div class="px-2 py-2 text-gray-600">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-4 w-4"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <title>Time</title>
                            <path
                              fill-rule="evenodd"
                              d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"
                              clip-rule="evenodd"
                            />
                          </svg>
                        </div>
                      </th>
                      <template
                        x-for="(availability, index, collection) in availabilityStats"
                        :key="index"
                      >
                        <td
                          x-bind:class="(index % 2 !== 0 ? 'bg-gray-50 ': '') + 'px-2 py-0 text-sm vertical-middle border-b'"
                        >
                          <div x-text="availability.at"></div>
                        </td>
                      </template>
                    </tr>
                    <tr class="relative">
                      <th class="sticky top-0 left-0 bg-white z-1 p-0">
                        <div class="px-2 py-2 text-gray-600">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-4 w-4"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <title>Available Slots</title>
                            <path
                              d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z"
                            />
                          </svg>
                        </div>
                      </th>
                      <template
                        x-for="(availability, index, collection) in availabilityStats"
                        :key="index"
                      >
                        <td
                          x-bind:class="(index % 2 !== 0 ? 'bg-gray-50 ': '') + 'px-2 py-0 text-sm vertical-middle'"
                        >
                          <div
                            x-text="availability.average_available_capacity"
                          ></div>
                        </td>
                      </template>
                    </tr>
                  </tbody>
                </table>
              </div>
              <template x-if="hasSubscribed">
                <p class="text-xs text-gray-500 mt-3">
                  Please keep this tab open for updates.
                </p>
              </template>
              <template x-if="!hasSubscribed">
                <p class="text-xs text-gray-500 mt-3">
                  <a href="#subscribe" @click="handleSubscriptionChange"
                    >Subscribe</a
                  >
                  to auto-update this list
                </p>
              </template>
            </div>
          </template>
        </div>
        <div class="flex-1 min-w-0 md:ml-4 md:pl-4 md:border-l">
          <div class="lg:flex lg:space-y-0 lg:space-x-8">
            <div class="flex-1 px-4 -mx-4">
              <template x-if="error">
                <div
                  class="text-red-900 bg-red-100 border border-red-300 p-4 mb-8 rounded-lg"
                >
                  <div x-text="error.message"></div>
                </div>
              </template>
              <template x-if="isSubmitting">
                <div class="mb-8">
                  <div class="text-center py-8 text-gray-800">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="h-6 w-6 animate-spin mx-auto"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                      />
                    </svg>
                    <div class="mt-4">Searching for available slots</div>
                  </div>
                </div>
              </template>
              <template
                x-if="!sessions.length && !isSubmitting && hasAppliedAnyFilters"
              >
                <div class="mb-8 mt-8">
                  <div class="text-xl mb-1">No Slots Available</div>
                  <p class="text-sm text-gray-500">
                    There are no slots available in this area at this moment.
                    Please try again later.
                  </p>
                  <template x-if="hasSubscribed">
                    <p class="text-sm mt-2">
                      You will be notified when slot(s) are available.
                    </p>
                  </template>
                  <template
                    x-if="!hasSubscribed && notificationsSupportedByBrowser"
                  >
                    <div>
                      <template x-if="!hasBlockedNotifications">
                        <p class="text-sm mt-2">
                          Please click on the bell icon to get notified on
                          updates.
                        </p>
                      </template>
                      <div class="mb-8 mt-8">
                        <form>
                          <label
                            class="p-4 border-2 border-dashed border-indigo-100 rounded-lg flex space-x-2 w-full bg-indigo-50 cursor-pointer"
                          >
                            <div class="relative mt-1">
                              <input
                                class="block invisible absolute h-1 w-1 opacity-0"
                                type="checkbox"
                                x-bind:checked="hasSubscribed"
                                @change="handleSubscriptionChange"
                              />
                              <template x-if="!hasSubscribed">
                                <div class="text-indigo-800">
                                  <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-6 w-6 transform -rotate-12"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                  >
                                    <path
                                      stroke-linecap="round"
                                      stroke-linejoin="round"
                                      stroke-width="2"
                                      d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"
                                    />
                                  </svg>
                                </div>
                              </template>
                              <template x-if="hasSubscribed">
                                <div class="text-indigo-800">
                                  <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-6 w-6 transform -rotate-12"
                                    viewBox="0 0 20 20"
                                    fill="currentColor"
                                  >
                                    <path
                                      d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"
                                    />
                                  </svg>
                                </div>
                              </template>
                            </div>
                            <div class="flex-1 min-w-0">
                              <template x-if="hasBlockedNotifications">
                                <section>
                                  <h5>Notifications have been blocked.</h5>
                                  <p class="text-xs text-gray-600 mt-1">
                                    Please grant permissions to show
                                    notifications from the browser settings to
                                    receive updates regarding slots
                                    availability.
                                  </p>
                                </section>
                              </template>
                              <template x-if="!hasBlockedNotifications">
                                <section id="subscribe">
                                  <h5>
                                    Get notification on updates in this area
                                  </h5>
                                  <p class="text-xs text-gray-600 mt-1">
                                    Please click on the bell icon to get
                                    notified for slots availability in this
                                    area. You will receive notifications from
                                    your browser. No phone or email required.
                                  </p>
                                </section>
                              </template>
                            </div>
                          </label>
                        </form>
                      </div>
                    </div>
                  </template>
                </div>
              </template>
              <template
                x-if="!sessions.length && !isSubmitting && !hasAppliedAnyFilters"
              >
                <div
                  class="mb-8 text-gray-600 text-center py-8 px-2 border-2 border-dashed rounded-lg"
                >
                  <div>Available slots will appear here.</div>
                  <div class="text-xs">
                    Search for slots using pincode or district
                  </div>
                </div>
              </template>
              <template x-if="sessions.length && !isSubmitting">
                <div class="mb-8">
                  <div class="block">
                    <ol
                      class="space-y-4 overflow-auto relative"
                      style="min-height: 300px; max-height: calc(100vh - 200px)"
                    >
                      <li
                        class="sticky top-0 w-full bg-white py-2 px-4 text-sm flex justify-between text-gray-600 items-center font-medium -mb-2"
                      >
                        <div>Center</div>
                        <div class="text-right">Availability</div>
                      </li>
                      <template
                        x-for="(session, index, collection) in sessions"
                        :key="index"
                      >
                        <li class="bg-coolGray-50 rounded-lg p-4">
                          <div class="flex justify-between space-x-4">
                            <div>
                              <div class="font-medium mb-1">
                                <span x-text="session.name"></span>
                              </div>
                              <div class="text-sm">
                                <span x-text="session.block_name"></span> -
                                <span x-text="session.pincode"></span>
                              </div>
                            </div>
                            <div class="text-right">
                              <div
                                x-text="session.available_capacity"
                                class="text-xl font-medium"
                              ></div>
                              <time
                                x-text="session.pretty_date"
                                class="text-sm whitespace-pre"
                                x-bind:datetime="session.parsed_date.toISOString()"
                              ></time>
                            </div>
                          </div>
                          <div class="text-gray-600 inline-flex -ml-4">
                            <div
                              x-text="session.vaccine"
                              class="font-medium text-xs ml-4"
                            ></div>
                            <div
                              x-text="session.fee_type"
                              class="font-medium text-xs ml-4"
                            ></div>
                          </div>
                        </li>
                      </template>
                    </ol>
                  </div>
                </div>
              </template>
            </div>
            <div class="lg:w-1/2">
              <template
                x-if="notificationsSupportedByBrowser && !isSubmitting && hasAppliedAnyFilters && (hasSubscribed || sessions.length)"
              >
                <div class="mb-8">
                  <form>
                    <label
                      class="p-4 border-2 border-dashed border-indigo-100 rounded-lg flex space-x-2 w-full bg-indigo-50 cursor-pointer"
                    >
                      <div class="relative mt-1">
                        <input
                          class="block invisible absolute h-1 w-1 opacity-0"
                          type="checkbox"
                          x-bind:checked="hasSubscribed"
                          @change="handleSubscriptionChange"
                        />
                        <template x-if="!hasSubscribed">
                          <div class="text-indigo-800">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              class="h-6 w-6 transform -rotate-12"
                              fill="none"
                              viewBox="0 0 24 24"
                              stroke="currentColor"
                            >
                              <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"
                              />
                            </svg>
                          </div>
                        </template>
                        <template x-if="hasSubscribed">
                          <div class="text-indigo-800">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              class="h-6 w-6 transform -rotate-12"
                              viewBox="0 0 20 20"
                              fill="currentColor"
                            >
                              <path
                                d="M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z"
                              />
                            </svg>
                          </div>
                        </template>
                      </div>
                      <div class="flex-1 min-w-0">
                        <template x-if="hasBlockedNotifications">
                          <section>
                            <h5>Notifications have been blocked.</h5>
                            <p class="text-xs text-gray-600 mt-1">
                              Please grant permissions to show notifications
                              from the browser settings to receive updates
                              regarding slots availability.
                            </p>
                          </section>
                        </template>
                        <template
                          x-if="!hasSubscribed && !hasBlockedNotifications"
                        >
                          <section id="subscribe">
                            <h5>Get notification on updates in this area</h5>
                            <p class="text-xs text-gray-600 mt-1">
                              Please click on the bell icon to get notified for
                              slots availability in this area. You will receive
                              notifications in your browser. No phone or email
                              required.
                            </p>
                          </section>
                        </template>
                        <template
                          x-if="hasSubscribed && !hasBlockedNotifications"
                        >
                          <section>
                            <h5>
                              You have subscribed for slots availability
                              updates.
                            </h5>
                            <p class="text-xs text-gray-600 mt-1">
                              <strong
                                >Please keep this tab open in your
                                browser.</strong
                              >
                              You will receive browser notifications for slots
                              availability for this area.
                            </p>
                            <p class="text-xs mt-1">
                              To unsubscribe, please click the bell icon again.
                            </p>
                          </section>
                        </template>
                      </div>
                    </label>
                  </form>
                </div>
              </template>
              <div class="bg-gray-50 rounded-lg p-6 shadow-inner">
                <h2 class="text-lg font-medium mb-4" id="how_to_book">
                  How to Book an Appointment
                </h2>
                <ol class="list-decimal ml-5 space-y-2">
                  <li>
                    Search for available slots in your area using pincode or
                    your district.
                  </li>
                  <li>See the available slots in the search results.</li>
                  <li>
                    If slots are available, visit
                    <a
                      href="https://selfregistration.cowin.gov.in/"
                      rel="noopener noreferrer"
                      target="_blank"
                      class="text-indigo-600 underline"
                      >https://selfregistration.cowin.gov.in/</a
                    >
                    to book an appointment.
                  </li>
                  <li>
                    If there are no slots available, click on bell icon to get
                    notified when slots are available in your area.
                  </li>
                </ol>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <section
      class="mt-16 px-4 md:px-8 py-8 bg-coolGray-50 rounded-lg text-gray-900"
      id="faq"
    >
      <h4 class="text-2xl mb-8 font-medium">Frequently asked questions</h4>
      <ol class="space-y-8">
        <li>
          <div class="font-medium mb-2">
            What is Sembark - Travel Management Software ?
          </div>
          <div class="text-sm text-gray-600">
            Sembark is a technology company, focusing on Travel Management
            softwares.
            <b class="font-medium text-gray-800"
              >Sembark provides complete software solutions to travel businesses
              (tour operators, DMCs etc.) for sales, follow-ups, bookings,
              reservations and, accounting management.</b
            >
            <br />
            <a
              href="{{
                meta.publicUrl
              }}/?utm_source=direct&utm_medium=site&utm_campaign=covid-vaccination&utm_content=from_faq"
              class="underline inline-block mt-1"
            >
              Learn more about Sembark
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4 inline"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M14 5l7 7m0 0l-7 7m7-7H3"
                />
              </svg>
            </a>
          </div>
        </li>
        <li>
          <div class="font-medium mb-2">
            I am not getting notifications regarding slots availability
          </div>
          <div class="text-sm text-gray-600">
            You should get notifications if you have subscribed and there are
            free slots available for your region. If you know there are some
            free slots available, please follow these step to troubleshoot the
            problem.
            <ol class="list-decimal ml-5 mt-2 space-y-2">
              <li>
                Please check that this tab is open in your browser and the
                browser is not closed. You can keep it in the background.
              </li>
              <li>
                There may be high demand or low supply of vaccines in your area.
                If you have subscribed, you will get general availability stats
                for your area. Be sure to check during the time of availability
                to get your booking. Please be patient.
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5 inline"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z"
                    clip-rule="evenodd"
                  />
                </svg>
              </li>
              <li>
                Please check the system settings for notifications on your
                device to see if the your browser (Google Chrome, Firefox etc.)
                is allowed to show the notifications.
              </li>
              <li>
                Please check that this website is not block from showing the
                notifications.
              </li>
            </ol>
          </div>
        </li>
        <li>
          <div class="font-medium mb-2">
            I can not see the bell icon for notifications on my device
          </div>
          <div class="text-sm text-gray-600">
            It means that your browser doesn't support notifications feature.
            <b class="font-medium text-gray-800"
              >We recommend using Google Chorme or Firefox to enable
              notifications.</b
            >
          </div>
        </li>
        <li>
          <div class="font-medium mb-2">
            By mistake, I blocked notifications. How can I unblock these?
          </div>
          <div class="text-sm text-gray-600">
            The procedure to unblock notifications depends on your browser
            (Chrome/Firefox). Here are some common way to unblock notifications:
            <ul class="list-disc ml-5 space-y-2 mt-2">
              <li>
                If you are using Google Chrome or Firefox (or similar Chromium
                based browser) on an Android device, click on the lock icon
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4 inline-block"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z"
                    clip-rule="evenodd"
                  />
                </svg>
                at the top menu bar (in the url). You will see a "Permissions"
                option. Click on it. You will see the "Notifications blocked"
                option. Click on it and allow "Show notifications".
              </li>
              <li>
                If you are using Google Chrome or Firefox (or similar Chromium
                based browser) on a dektop (PC, Laptop), you will find some
                icons in the top url/search bar. Click on these icons to see
                which one has an option to "Permissions". Once you find it,
                click on "Allow" to unblock the notifications permission.
              </li>
            </ul>
          </div>
        </li>
        <li>
          <div class="font-medium mb-2">
            Can I get notified for availability in different areas
            (pincode/district) ?
          </div>
          <div class="text-sm text-gray-600">
            <b>Yes.</b> Simply search for different areas (pincode/district) and
            click on the bell icon for that area. You will get notified when
            slots are available for each area.
          </div>
        </li>
        <li>
          <div class="font-medium mb-2">
            When will I get notified regarding slots availability?
          </div>
          <div class="text-sm text-gray-600">
            Slots availability is checked in background on a regular basis. As
            soon as there are slots available for your searched region, you will
            get a notification.
          </div>
        </li>
        <li>
          <div class="font-medium mb-2">
            How to unsubscribe from Notifications ?
          </div>
          <div class="text-sm text-gray-600">
            You can click on the bell icon to unsubscribe for updates in a
            particular area. If you want to unsubscribe for updates in all
            areas, click on the "Stop All Notifications" option which is visible
            on the top the page.
          </div>
        </li>
      </ol>
    </section>
    <section class="mt-16 px-4 md:px-8 py-8 bg-indigo-800 rounded-lg">
      <h4 class="text-xl mb-4">Disclaimer</h4>
      <p>
        The slots availability data is a property of
        <a
          href="https://www.india.gov.in/"
          rel="noopener noreferrer"
          class="underline"
          target="_blank"
          >Ministry of Health and Family Welfare, India</a
        >
        and is maintained by
        <a
          href="https://www.cowin.gov.in/home"
          target="_blank"
          class="underline"
          rel="noopener noreferrer"
          >CoWIN</a
        >
        with full ownership rights. This portal is created merely for helping
        the India get vaccinated. Hence, we don't hold any liabilities regarding
        data discrepancies, slots availability, vaccination or any other related
        activities.
      </p>
    </section>
  </div>
</div>
<!-- Pollyfill fetch (Promise will be auto polyfilled) -->
<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=fetch"></script>
<script src="https://unpkg.com/idb@6.0.0/build/iife/index-min.js"></script>

<script>
  window.searchFormController = function searchFormController() {
    const notificationsSupportedByBrowser =
      "serviceWorker" in navigator && "Notification" in window;
    const permissionGranted =
      notificationsSupportedByBrowser && Notification.permission === "granted";
    const permissionBlocked =
      notificationsSupportedByBrowser && Notification.permission === "denied";
    const locationQuery = getQueryFromLocationSearch();
    return {
      query: {
        pincode: locationQuery.pincode || "",
        district_id: locationQuery.district_id || "",
      },
      isSubmitting: false,
      hasAppliedAnyFilters: Boolean(
        locationQuery.pincode || locationQuery.district_id
      ),
      searchUsing: locationQuery.district_id ? "district" : "pincode",
      minAgeLimit: locationQuery.minAgeLimit || "18",
      sessions: [],
      hasBlockedNotifications: permissionBlocked,
      error: null,
      notificationsSupportedByBrowser,
      hasSubscribed: false,
      totalSubscriptionCount: 0,
      availabilityStats: [],
      handleSubmit() {
        const query = {};
        const m = this;
        if (m.searchUsing === "pincode") {
          query.pincode = m.query.pincode;
        } else {
          query.district_id = m.query.district_id;
        }
        if (!query.pincode && !query.district_id) return;
        m.updateHasSubscribedIfNecessary();
        m.isSubmitting = true;
        m.error = null;
        (m.hasAppliedAnyFilters = Boolean(query.pincode || query.district_id)),
          (m.query = query);
        updateLocationSearchWithNewQuery(
          Object.assign({}, query, { minAgeLimit: m.minAgeLimit })
        );
        const fetchQuery = Object.assign({}, query, {
          minAgeLimit: m.minAgeLimit,
        });
        fetchSessions(fetchQuery)
          .then(({ totalAvailability, sessions }) => {
            m.sessions = sessions;
            m.isSubmitting = false;
            gtag("event", "covid_vaccination_search", {
              using: m.searchUsing,
              pincode: query.pincode,
              district_id: query.district_id,
              min_age_limit: m.minAgeLimit,
              availability: totalAvailability,
              sessions_count: sessions.length,
            });
          })
          .catch(function (e) {
            m.error = e;
            m.isSubmitting = false;
            console.error(e);
            gtag("event", "covid_vaccination_search_failed", {
              message: e.message,
            });
          });
      },
      handleSubscriptionChange(e) {
        this.hasSubscribed ? this.unsubscribe() : this.subscribe();
      },
      getQueryString() {
        if (this.searchUsing === "pincode") {
          return JSON.stringify({
            pincode: this.query.pincode,
            minAgeLimit: this.minAgeLimit,
          });
        }
        return JSON.stringify({
          district_id: this.query.district_id,
          minAgeLimit: this.minAgeLimit,
        });
      },
      handleInit() {
        const m = this;
        if (locationQuery.viaNotification) {
          gtag("event", "covid_notification_viewed");
        }
        if (
          locationQuery &&
          (locationQuery.pincode || locationQuery.district_id)
        ) {
          m.handleSubmit();
        }
        if (m.hasBlockedNotifications) {
          m.unsubscribeFromAll();
        }
        // get the service worker
        getServiceWorkerRegistration()
          .then(function (registration) {
            // make sure we are on latest every update
            registration.update();

            navigator.serviceWorker.addEventListener("message", (event) => {
              switch (event.data.type) {
                case "subscriptions":
                  const subscriptions = event.data.payload;
                  m.totalSubscriptionCount = subscriptions.length;
                  break;
                case "availability_stats":
                  const { details, query } = event.data.payload;
                  if (m.getQueryString() === query) {
                    m.availabilityStats = details;
                  }
                  break;
                case "subscription_details":
                  const subscription_details = event.data.payload;
                  if (
                    subscription_details &&
                    subscription_details.id === m.getQueryString()
                  ) {
                    m.hasSubscribed = true;
                  } else {
                    m.hasSubscribed = false;
                  }
                  registration.active.postMessage({
                    type: "get_availability_stats",
                    payload: m.getQueryString(),
                  });
                  break;
              }
            });
            m.updateHasSubscribedIfNecessary();
          })
          .catch(function (error) {
            console.log(error);
            // service worker not round
            setTimeout(function () {
              m.unsubscribeFromAll();
            }, 1000);
          });
      },
      updateHasSubscribedIfNecessary() {
        const m = this;
        const queryString = m.getQueryString();
        getServiceWorkerRegistration().then((reg) => {
          reg.active.postMessage({
            type: "get_subscription_details",
            payload: queryString,
          });
          reg.active.postMessage({ type: "get_subscriptions" });
          reg.active.postMessage({
            type: "check_availability_if_subscribed",
          });
        });
      },
      unsubscribe() {
        const queryString = this.getQueryString();
        const m = this;
        m.hasSubscribed = false;
        m.totalSubscriptionCount -= 1;
        gtag("event", "covid_notification_unsubscribed", {
          total: m.totalSubscriptionCount,
        });
        // notify via service worker
        getServiceWorkerRegistration().then((reg) =>
          reg.active.postMessage({
            type: "unsubscribe",
            payload: queryString,
          })
        );
      },
      subscribe() {
        const queryString = this.getQueryString();
        const m = this;
        window.Notification.requestPermission().then(function (permission) {
          if (permission !== "granted") {
            gtag("event", "covid_notification_permission_denied", permission);
            alert("Please grant permission to get notified regarding updates.");
            setTimeout(function () {
              m.hasSubscribed = false;
            }, 1000);
            m.unsubscribeFromAll();
            return;
          }
          gtag("event", "covid_notification_subscribed", {
            total: m.totalSubscriptionCount + 1,
          });
          m.hasSubscribed = true;
          m.totalSubscriptionCount += 1;
          getServiceWorkerRegistration().then(function (registration) {
            // notify via service worker
            registration.active.postMessage({
              type: "subscribe",
              payload: queryString,
            });
            setTimeout(() => {
              // get the tracking id
              const cookie = document.cookie;
              if (cookie) {
                const ga = document.cookie
                  .split(";")
                  .map((s) => s.trim().split("="))
                  .filter((item) => item[0] == "_ga")[0];
                if (ga) {
                  const cid = ga[1];
                  // send it to service worker
                  registration.active.postMessage({
                    type: "gcid",
                    payload: cid,
                  });
                }
              }
            }, 1000);
          });
        });
      },
      unsubscribeFromAll() {
        const m = this;
        if (m.hasSubscribed) {
          gtag("event", "covid_notification_unsubscribed_all");
        }
        m.hasSubscribed = false;
        m.totalSubscriptionCount = 0;
        getServiceWorkerRegistration().then((reg) => {
          // notify via service worker
          reg.active.postMessage({
            type: "unsubscribe_all",
          });
        });
      },
      handleUnsubscribeFromAll() {
        if (
          confirm(
            "All vaccine availability notification will be stopped from this site. Are you sure ?"
          )
        ) {
          this.unsubscribeFromAll();
        } else {
          gtag("event", "covid_notification_unsubscribed_all_canceled");
        }
      },
    };
  };
  function formatDate(date) {
    var d = new Date(date),
      month = "" + (d.getMonth() + 1),
      day = "" + d.getDate(),
      year = d.getFullYear();
    if (month.length < 2) month = "0" + month;
    if (day.length < 2) day = "0" + day;
    return [day, month, year].join("-");
  }

  var MONTHS = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ];

  function prettyFormatDate(date) {
    var d = new Date(date),
      month = MONTHS[d.getMonth()],
      day = "" + d.getDate();
    // year = d.getFullYear()
    return day + " " + month;
  }

  function parseDate(date) {
    try {
      var [day, month, year] = date.split("-").map((d) => parseInt(d));
      var d = new Date();
      d.setFullYear(year);
      d.setMonth(month - 1);
      d.setDate(day);
      d.setHours(0);
      d.setMinutes(0);
      d.setSeconds(0);
      return d;
    } catch (e) {
      console.error(e);
      return new Date();
    }
  }

  function fetchSessions(query) {
    const today = new Date();
    return Promise.all(
      [today].map(function fetchSlotsToDate(date) {
        let url;
        if (query.pincode) {
          url =
            "https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin" +
            "?pincode=" +
            encodeURIComponent(query.pincode);
        } else {
          url =
            "https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict" +
            "?district_id=" +
            encodeURIComponent(query.district_id);
        }
        return fetch(url + "&date=" + formatDate(new Date()), {
          method: "GET",
          headers: { "Content-Type": "application/json" },
          referrer: "",
          referrerPolicy: "same-origin",
          mode: "cors",
          keepalive: true,
        })
          .then(function (resp) {
            return resp.json();
          })
          .then(function (data) {
            if (data.error) {
              throw new Error(data.error);
            }
            const centers = data.centers;
            const sessions = centers.reduce(function (sessions, center) {
              // get sessions from center and push it to sessions carry
              return sessions.concat(
                center.sessions.map(function (session) {
                  // add center details to the session
                  session = Object.assign({}, session, center);
                  delete session["sessions"];
                  session.parsed_date = parseDate(session.date);
                  session.pretty_date = prettyFormatDate(session.parsed_date);
                  return session;
                })
              );
            }, []);
            return sessions;
          });
      })
    )
      .then(function (arrayOfArrayOfSessions) {
        return arrayOfArrayOfSessions.reduce(function flattenSessions(
          sessions,
          arrayOfSessions
        ) {
          return sessions.concat(
            arrayOfSessions.sort((a, b) =>
              a.parsed_date > b.parsed_date
                ? 1
                : a.date === b.date
                ? a.name.toLowerCase() > b.name.toLowerCase()
                  ? 1
                  : -1
                : -1
            )
          );
        },
        []);
      })
      .then(function (sessions) {
        let totalAvailability = 0;
        const filteredSessions = sessions.filter(function hasAvailableSlots(
          session
        ) {
          if (parseInt(session.available_capacity) <= 0) {
            return false;
          }
          const minAgeLimit = parseInt(query.minAgeLimit);
          if (Number(session.min_age_limit) !== minAgeLimit) {
            return false;
          }
          totalAvailability += session.available_capacity;
          return true;
        });
        return { totalAvailability, sessions: filteredSessions };
      });
  }

  let activeServiceWorkerRegistration;

  function getServiceWorkerRegistration() {
    return new Promise(function (resolve, reject) {
      if (activeServiceWorkerRegistration)
        return resolve(activeServiceWorkerRegistration);
      if ("serviceWorker" in navigator) {
        navigator.serviceWorker
          .getRegistrations()
          .then(function (registrations) {
            for (let registration of registrations) {
              if (
                registration.active &&
                registration.active.state === "activated"
              ) {
                if (
                  registration.active.scriptURL.indexOf("covid/service.js") !==
                    -1 &&
                  registration.scope.indexOf("covid/notification-scope") !== -1
                ) {
                  return resolve(registration);
                }
              }
            }
            return navigator.serviceWorker.register(
              "/assets/covid/service.js",
              {
                scope: "/assets/covid/notification-scope",
              }
            );
          })
          .then((registration) => {
            activeServiceWorkerRegistration = registration;
          });
      } else {
        reject("Not supported");
      }
    });
  }

  function getQueryFromLocationSearch() {
    const queryString = window.location.search;
    var query = {};
    var pairs = (queryString[0] === "?"
      ? queryString.substr(1)
      : queryString
    ).split("&");
    for (var i = 0; i < pairs.length; i++) {
      var pair = pairs[i].split("=");
      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || "");
    }
    return query;
  }

  function updateLocationSearchWithNewQuery(query) {
    if (window.history && history.pushState) {
      const search = new URLSearchParams();
      Object.keys(query).map(function (key) {
        search.set(key, query[key]);
      });
      const newurl =
        window.location.origin +
        window.location.pathname +
        "?" +
        search.toString();
      window.history.pushState({ path: newurl }, "", newurl);
    }
  }
</script>
